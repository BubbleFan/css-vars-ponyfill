{"version":3,"file":"css-vars-ponyfill.min.js","sources":["../node_modules/get-css-data/dist/get-css-data.esm.js","../node_modules/balanced-match/index.js","../src/parse-css.js","../src/transform-css.js","../src/walk-css.js","../src/stringify-css.js","../src/index.js"],"sourcesContent":["/*!\n * get-css-data\n * v1.6.3\n * https://github.com/jhildenbiddle/get-css-data\n * (c) 2018-2019 John Hildenbiddle <http://hildenbiddle.com>\n * MIT license\n */\nfunction getUrls(urls) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var settings = {\n        mimeType: options.mimeType || null,\n        onBeforeSend: options.onBeforeSend || Function.prototype,\n        onSuccess: options.onSuccess || Function.prototype,\n        onError: options.onError || Function.prototype,\n        onComplete: options.onComplete || Function.prototype\n    };\n    var urlArray = Array.isArray(urls) ? urls : [ urls ];\n    var urlQueue = Array.apply(null, Array(urlArray.length)).map(function(x) {\n        return null;\n    });\n    function isValidCss() {\n        var cssText = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n        var isHTML = cssText.trim().charAt(0) === \"<\";\n        return !isHTML;\n    }\n    function onError(xhr, urlIndex) {\n        settings.onError(xhr, urlArray[urlIndex], urlIndex);\n    }\n    function onSuccess(responseText, urlIndex) {\n        var returnVal = settings.onSuccess(responseText, urlArray[urlIndex], urlIndex);\n        responseText = returnVal === false ? \"\" : returnVal || responseText;\n        urlQueue[urlIndex] = responseText;\n        if (urlQueue.indexOf(null) === -1) {\n            settings.onComplete(urlQueue);\n        }\n    }\n    var parser = document.createElement(\"a\");\n    urlArray.forEach(function(url, i) {\n        parser.setAttribute(\"href\", url);\n        parser.href = String(parser.href);\n        var isIElte9 = Boolean(document.all && !window.atob);\n        var isIElte9CORS = isIElte9 && parser.host.split(\":\")[0] !== location.host.split(\":\")[0];\n        if (isIElte9CORS) {\n            var isSameProtocol = parser.protocol === location.protocol;\n            if (isSameProtocol) {\n                var xdr = new XDomainRequest();\n                xdr.open(\"GET\", url);\n                xdr.timeout = 0;\n                xdr.onprogress = Function.prototype;\n                xdr.ontimeout = Function.prototype;\n                xdr.onload = function() {\n                    if (isValidCss(xdr.responseText)) {\n                        onSuccess(xdr.responseText, i);\n                    } else {\n                        onError(xdr, i);\n                    }\n                };\n                xdr.onerror = function(err) {\n                    onError(xdr, i);\n                };\n                setTimeout(function() {\n                    xdr.send();\n                }, 0);\n            } else {\n                console.warn(\"Internet Explorer 9 Cross-Origin (CORS) requests must use the same protocol (\".concat(url, \")\"));\n                onError(null, i);\n            }\n        } else {\n            var xhr = new XMLHttpRequest();\n            xhr.open(\"GET\", url);\n            if (settings.mimeType && xhr.overrideMimeType) {\n                xhr.overrideMimeType(settings.mimeType);\n            }\n            settings.onBeforeSend(xhr, url, i);\n            xhr.onreadystatechange = function() {\n                if (xhr.readyState === 4) {\n                    if (xhr.status === 200 && isValidCss(xhr.responseText)) {\n                        onSuccess(xhr.responseText, i);\n                    } else {\n                        onError(xhr, i);\n                    }\n                }\n            };\n            xhr.send();\n        }\n    });\n}\n\n/**\n * Gets CSS data from <style> and <link> nodes (including @imports), then\n * returns data in order processed by DOM. Allows specifying nodes to\n * include/exclude and filtering CSS data using RegEx.\n *\n * @preserve\n * @param {object}   [options] The options object\n * @param {object}   [options.rootElement=document] Root element to traverse for\n *                   <link> and <style> nodes.\n * @param {string}   [options.include] CSS selector matching <link> and <style>\n *                   nodes to include\n * @param {string}   [options.exclude] CSS selector matching <link> and <style>\n *                   nodes to exclude\n * @param {object}   [options.filter] Regular expression used to filter node CSS\n *                   data. Each block of CSS data is tested against the filter,\n *                   and only matching data is included.\n * @param {object}   [options.useCSSOM=false] Determines if CSS data will be\n *                   collected from a stylesheet's runtime values instead of its\n *                   text content. This is required to get accurate CSS data\n *                   when a stylesheet has been modified using the deleteRule()\n *                   or insertRule() methods because these modifications will\n *                   not be reflected in the stylesheet's text content.\n * @param {function} [options.onBeforeSend] Callback before XHR is sent. Passes\n *                   1) the XHR object, 2) source node reference, and 3) the\n *                   source URL as arguments.\n * @param {function} [options.onSuccess] Callback on each CSS node read. Passes\n *                   1) CSS text, 2) source node reference, and 3) the source\n *                   URL as arguments.\n * @param {function} [options.onError] Callback on each error. Passes 1) the XHR\n *                   object for inspection, 2) soure node reference, and 3) the\n *                   source URL that failed (either a <link> href or an @import)\n *                   as arguments\n * @param {function} [options.onComplete] Callback after all nodes have been\n *                   processed. Passes 1) concatenated CSS text, 2) an array of\n *                   CSS text in DOM order, and 3) an array of nodes in DOM\n *                   order as arguments.\n *\n * @example\n *\n *   getCssData({\n *     rootElement: document,\n *     include    : 'style,link[rel=\"stylesheet\"]',\n *     exclude    : '[href=\"skip.css\"]',\n *     filter     : /red/,\n *     useCSSOM   : false,\n *     onBeforeSend(xhr, node, url) {\n *       // ...\n *     }\n *     onSuccess(cssText, node, url) {\n *       // ...\n *     }\n *     onError(xhr, node, url) {\n *       // ...\n *     },\n *     onComplete(cssText, cssArray, nodeArray) {\n *       // ...\n *     }\n *   });\n */ function getCssData(options) {\n    var regex = {\n        cssComments: /\\/\\*[\\s\\S]+?\\*\\//g,\n        cssImports: /(?:@import\\s*)(?:url\\(\\s*)?(?:['\"])([^'\"]*)(?:['\"])(?:\\s*\\))?(?:[^;]*;)/g\n    };\n    var settings = {\n        rootElement: options.rootElement || document,\n        include: options.include || 'style,link[rel=\"stylesheet\"]',\n        exclude: options.exclude || null,\n        filter: options.filter || null,\n        useCSSOM: options.useCSSOM || false,\n        onBeforeSend: options.onBeforeSend || Function.prototype,\n        onSuccess: options.onSuccess || Function.prototype,\n        onError: options.onError || Function.prototype,\n        onComplete: options.onComplete || Function.prototype\n    };\n    var sourceNodes = Array.apply(null, settings.rootElement.querySelectorAll(settings.include)).filter(function(node) {\n        return !matchesSelector(node, settings.exclude);\n    });\n    var cssArray = Array.apply(null, Array(sourceNodes.length)).map(function(x) {\n        return null;\n    });\n    function handleComplete() {\n        var isComplete = cssArray.indexOf(null) === -1;\n        if (isComplete) {\n            var cssText = cssArray.join(\"\");\n            settings.onComplete(cssText, cssArray, sourceNodes);\n        }\n    }\n    function handleSuccess(cssText, cssIndex, node, sourceUrl) {\n        var returnVal = settings.onSuccess(cssText, node, sourceUrl);\n        cssText = returnVal !== undefined && Boolean(returnVal) === false ? \"\" : returnVal || cssText;\n        resolveImports(cssText, node, sourceUrl, function(resolvedCssText, errorData) {\n            if (cssArray[cssIndex] === null) {\n                errorData.forEach(function(data) {\n                    return settings.onError(data.xhr, node, data.url);\n                });\n                if (!settings.filter || settings.filter.test(resolvedCssText)) {\n                    cssArray[cssIndex] = resolvedCssText;\n                } else {\n                    cssArray[cssIndex] = \"\";\n                }\n                handleComplete();\n            }\n        });\n    }\n    function parseImportData(cssText, baseUrl) {\n        var ignoreRules = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n        var importData = {};\n        importData.rules = (cssText.replace(regex.cssComments, \"\").match(regex.cssImports) || []).filter(function(rule) {\n            return ignoreRules.indexOf(rule) === -1;\n        });\n        importData.urls = importData.rules.map(function(rule) {\n            return rule.replace(regex.cssImports, \"$1\");\n        });\n        importData.absoluteUrls = importData.urls.map(function(url) {\n            return getFullUrl(url, baseUrl);\n        });\n        importData.absoluteRules = importData.rules.map(function(rule, i) {\n            var oldUrl = importData.urls[i];\n            var newUrl = getFullUrl(importData.absoluteUrls[i], baseUrl);\n            return rule.replace(oldUrl, newUrl);\n        });\n        return importData;\n    }\n    function resolveImports(cssText, node, baseUrl, callbackFn) {\n        var __errorData = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n        var __errorRules = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : [];\n        var importData = parseImportData(cssText, baseUrl, __errorRules);\n        if (importData.rules.length) {\n            getUrls(importData.absoluteUrls, {\n                onBeforeSend: function onBeforeSend(xhr, url, urlIndex) {\n                    settings.onBeforeSend(xhr, node, url);\n                },\n                onSuccess: function onSuccess(cssText, url, urlIndex) {\n                    var returnVal = settings.onSuccess(cssText, node, url);\n                    cssText = returnVal === false ? \"\" : returnVal || cssText;\n                    var responseImportData = parseImportData(cssText, url, __errorRules);\n                    responseImportData.rules.forEach(function(rule, i) {\n                        cssText = cssText.replace(rule, responseImportData.absoluteRules[i]);\n                    });\n                    return cssText;\n                },\n                onError: function onError(xhr, url, urlIndex) {\n                    __errorData.push({\n                        xhr: xhr,\n                        url: url\n                    });\n                    __errorRules.push(importData.rules[urlIndex]);\n                    resolveImports(cssText, node, baseUrl, callbackFn, __errorData, __errorRules);\n                },\n                onComplete: function onComplete(responseArray) {\n                    responseArray.forEach(function(importText, i) {\n                        cssText = cssText.replace(importData.rules[i], importText);\n                    });\n                    resolveImports(cssText, node, baseUrl, callbackFn, __errorData, __errorRules);\n                }\n            });\n        } else {\n            callbackFn(cssText, __errorData);\n        }\n    }\n    if (sourceNodes.length) {\n        sourceNodes.forEach(function(node, i) {\n            var linkHref = node.getAttribute(\"href\");\n            var linkRel = node.getAttribute(\"rel\");\n            var isLink = node.nodeName === \"LINK\" && linkHref && linkRel && linkRel.toLowerCase() === \"stylesheet\";\n            var isStyle = node.nodeName === \"STYLE\";\n            if (isLink) {\n                getUrls(linkHref, {\n                    mimeType: \"text/css\",\n                    onBeforeSend: function onBeforeSend(xhr, url, urlIndex) {\n                        settings.onBeforeSend(xhr, node, url);\n                    },\n                    onSuccess: function onSuccess(cssText, url, urlIndex) {\n                        var sourceUrl = getFullUrl(linkHref, location.href);\n                        handleSuccess(cssText, i, node, sourceUrl);\n                    },\n                    onError: function onError(xhr, url, urlIndex) {\n                        cssArray[i] = \"\";\n                        settings.onError(xhr, node, url);\n                        handleComplete();\n                    }\n                });\n            } else if (isStyle) {\n                var cssText = node.textContent;\n                if (settings.useCSSOM) {\n                    cssText = Array.apply(null, node.sheet.cssRules).map(function(rule) {\n                        return rule.cssText;\n                    }).join(\"\");\n                }\n                handleSuccess(cssText, i, node, location.href);\n            } else {\n                cssArray[i] = \"\";\n                handleComplete();\n            }\n        });\n    } else {\n        settings.onComplete(\"\", []);\n    }\n}\n\nfunction getFullUrl(url) {\n    var base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : location.href;\n    var d = document.implementation.createHTMLDocument(\"\");\n    var b = d.createElement(\"base\");\n    var a = d.createElement(\"a\");\n    d.head.appendChild(b);\n    d.body.appendChild(a);\n    b.href = base;\n    a.href = url;\n    return a.href;\n}\n\nfunction matchesSelector(elm, selector) {\n    var matches = elm.matches || elm.matchesSelector || elm.webkitMatchesSelector || elm.mozMatchesSelector || elm.msMatchesSelector || elm.oMatchesSelector;\n    return matches.call(elm, selector);\n}\n\nexport default getCssData;\n//# sourceMappingURL=get-css-data.esm.js.map\n","'use strict';\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n","/**\n * Based on css parser/compiler by NxChg\n * https://github.com/NxtChg/pieces/tree/master/js/css_parser\n */\n\n\n// Dependencies\n// =============================================================================\nimport balanced from 'balanced-match';\n\n\n// Functions\n// =============================================================================\n/**\n * Parses CSS string and generates AST object\n *\n * @param {string}  css The CSS stringt to be converted to an AST\n * @param {object}  [options] Options object\n * @param {boolean} [options.onlyVars=false] Remove declarations that do not\n *                  contain a CSS variable from the return value. Note that\n *                  @font-face and @keyframe rules require all declarations to\n *                  be returned if a CSS variable is used.\n * @param {boolean} [options.removeComments=false] Remove comments from returned\n *                  object.\n * @returns {object}\n */\nfunction parseCss(css, options = {}) {\n    const defaults = {\n        onlyVars      : false,\n        removeComments: false\n    };\n    const settings = Object.assign({}, defaults, options);\n    const errors   = [];\n\n    // Errors\n    // -------------------------------------------------------------------------\n    function error(msg) {\n        throw new Error(`CSS parse error: ${msg}`);\n    }\n\n    // RegEx\n    // -------------------------------------------------------------------------\n    // Match regexp and return captures\n    function match(re) {\n        const m = re.exec(css);\n\n        if (m) {\n            css = css.slice(m[0].length);\n\n            return m;\n        }\n    }\n\n    function open() {\n        return match(/^{\\s*/);\n    }\n\n    function close() {\n        return match(/^}/);\n    }\n\n    function whitespace() {\n        match(/^\\s*/);\n    }\n\n    // Comments\n    // -------------------------------------------------------------------------\n    function comment() {\n        whitespace();\n\n        if (css[0] !== '/' || css[1] !== '*') {\n            return;\n        }\n\n        let i = 2;\n\n        while (css[i] && (css[i] !== '*' || css[i + 1] !== '/')) {\n            i++;\n        }\n\n        if (!css[i]) {\n            return error('end of comment is missing');\n        }\n\n        const str = css.slice(2, i);\n\n        css = css.slice(i + 2);\n\n        return {\n            type   : 'comment',\n            comment: str\n        };\n    }\n\n    function comments() {\n        const cmnts = [];\n        let c;\n\n        while ((c = comment())) {\n            cmnts.push(c);\n        }\n\n        return settings.removeComments ? [] : cmnts;\n    }\n\n    // Selector\n    // -------------------------------------------------------------------------\n    function selector() {\n        whitespace();\n\n        while (css[0] === '}') {\n            error('extra closing bracket');\n        }\n\n        const m = match(/^((\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'|[^{])+)/);\n\n        if (m) {\n            return m[0]\n                .trim() // remove all comments from selectors\n                .replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*\\/+/g, '')\n                .replace(/\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'/g, function(m) {\n                    return m.replace(/,/g, '\\u200C');\n                })\n                .split(/\\s*(?![^(]*\\)),\\s*/)\n                .map(function(s) {\n                    return s.replace(/\\u200C/g, ',');\n                });\n        }\n    }\n\n    // Declarations\n    // -------------------------------------------------------------------------\n    function declaration() {\n        match(/^([;\\s]*)+/); // ignore empty declarations + whitespace\n\n        const comment_regexp = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n        let prop = match(/^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\n\n        if (!prop) {\n            return;\n        }\n\n        prop = prop[0].trim();\n\n        if (!match(/^:\\s*/)) {\n            return error('property missing \\':\\'');\n        }\n\n        // Quotes regex repeats verbatim inside and outside parentheses\n        const val = match(/^((?:\\/\\*.*?\\*\\/|'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\((\\s*'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|[^)]*?)\\s*\\)|[^};])+)/);\n        const ret = {\n            type    : 'declaration',\n            property: prop.replace(comment_regexp, ''),\n            value   : val ? val[0].replace(comment_regexp, '').trim() : ''\n        };\n\n        match(/^[;\\s]*/);\n\n        return ret;\n    }\n\n    function declarations() {\n        if (!open()) {\n            return error('missing \\'{\\'');\n        }\n\n        let d;\n        let decls = comments();\n\n        while ((d = declaration())) {\n            decls.push(d);\n            decls = decls.concat(comments());\n        }\n\n        if (!close()) {\n            return error('missing \\'}\\'');\n        }\n\n        return decls;\n    }\n\n    // Keyframes\n    // -------------------------------------------------------------------------\n    function keyframe() {\n        whitespace();\n\n        const vals = [];\n        let m;\n\n        while ((m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/))) {\n            vals.push(m[1]);\n            match(/^,\\s*/);\n        }\n\n        if (vals.length) {\n            return {\n                type        : 'keyframe',\n                values      : vals,\n                declarations: declarations()\n            };\n        }\n    }\n\n    function at_keyframes() {\n        let m = match(/^@([-\\w]+)?keyframes\\s*/);\n\n        if (!m) {\n            return;\n        }\n\n        const vendor = m[1];\n\n        m = match(/^([-\\w]+)\\s*/);\n\n        if (!m) {\n            return error('@keyframes missing name');\n        }\n\n        const name = m[1];\n\n        if (!open()) {\n            return error('@keyframes missing \\'{\\'');\n        }\n\n        let frame;\n        let frames = comments();\n\n        while ((frame = keyframe())) {\n            frames.push(frame);\n            frames = frames.concat(comments());\n        }\n\n        if (!close()) {\n            return error('@keyframes missing \\'}\\'');\n        }\n\n        return {\n            type     : 'keyframes',\n            name     : name,\n            vendor   : vendor,\n            keyframes: frames\n        };\n    }\n\n    // @ Rules\n    // -------------------------------------------------------------------------\n    function at_page() {\n        const m = match(/^@page */);\n        if (m) {\n            const sel = selector() || [];\n            return { type: 'page', selectors: sel, declarations: declarations() };\n        }\n    }\n    function at_fontface() {\n        const m = match(/^@font-face\\s*/);\n        if (m) { return { type: 'font-face', declarations: declarations() }; }\n    }\n    function at_supports() {\n        const m = match(/^@supports *([^{]+)/);\n        if (m) { return { type: 'supports', supports: m[1].trim(), rules: rules() }; }\n    }\n    function at_host() {\n        const m = match(/^@host\\s*/);\n        if (m) { return { type: 'host', rules: rules() }; }\n    }\n    function at_media() {\n        const m = match(/^@media *([^{]+)/);\n        if (m) { return { type: 'media', media: m[1].trim(), rules: rules() }; }\n    }\n    function at_custom_m() {\n        const m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\n        if (m) { return { type: 'custom-media', name: m[1].trim(), media: m[2].trim() }; }\n    }\n    function at_document() {\n        const m = match(/^@([-\\w]+)?document *([^{]+)/);\n        if (m) { return { type: 'document', document: m[2].trim(), vendor: m[1] ? m[1].trim() : null, rules: rules() }; }\n    }\n    function at_x() {\n        const m = match(/^@(import|charset|namespace)\\s*([^;]+);/);\n        if (m) { return { type: m[1], name: m[2].trim() }; }\n    }\n    function at_rule() {\n        whitespace();\n\n        if (css[0] === '@') {\n            const ret = at_keyframes() || at_supports() || at_host() || at_media() || at_custom_m() || at_page() || at_document() || at_fontface() || at_x();\n\n            if (ret && settings.onlyVars) {\n                let hasVarFunc = false;\n\n                // @page, @font-face\n                if (ret.declarations) {\n                    hasVarFunc = ret.declarations.some(decl => /var\\(/.test(decl.value));\n                }\n                // @keyframes, @media, @supports, etc.\n                else {\n                    const arr = ret.keyframes || ret.rules || [];\n\n                    hasVarFunc = arr.some(obj => (obj.declarations || []).some(decl => /var\\(/.test(decl.value)));\n                }\n\n                return hasVarFunc ? ret : {};\n            }\n\n            return ret;\n        }\n    }\n\n    // Rules\n    // -------------------------------------------------------------------------\n    function rule() {\n        if (settings.onlyVars) {\n            const balancedMatch = balanced('{', '}', css);\n\n            // When onlyVars:true, skip rulset if it does not contain a :root\n            // variable declaration of a variable function value\n            if (balancedMatch) {\n                const hasVarDecl = balancedMatch.pre.indexOf(':root') !== -1 && /--\\S*\\s*:/.test(balancedMatch.body);\n                const hasVarFunc = /var\\(/.test(balancedMatch.body);\n\n                if (!hasVarDecl && !hasVarFunc) {\n                    css = css.slice(balancedMatch.end + 1);\n\n                    return {};\n                }\n            }\n        }\n\n        const sel   = selector() || [];\n        const decls = !settings.onlyVars ? declarations() : declarations().filter(decl => {\n            const hasVarDecl = sel.some(s => s.indexOf(':root') !== -1) && /^--\\S/.test(decl.property);\n            const hasVarFunc = /var\\(/.test(decl.value);\n\n            return hasVarDecl || hasVarFunc;\n        });\n\n        if (!sel.length) {\n            error('selector missing');\n        }\n\n        return {\n            type        : 'rule',\n            selectors   : sel,\n            declarations: decls\n        };\n    }\n\n    function rules(core) {\n        if (!core && !open()) {\n            return error('missing \\'{\\'');\n        }\n\n        let node;\n        let rules = comments();\n\n        while (css.length && (core || css[0] !== '}') && (node = at_rule() || rule())) {\n            if (node.type) {\n                rules.push(node);\n            }\n\n            rules = rules.concat(comments());\n        }\n\n        if (!core && !close()) {\n            return error('missing \\'}\\'');\n        }\n\n        return rules;\n    }\n\n    return {\n        type: 'stylesheet',\n        stylesheet: {\n            rules: rules(true),\n            errors: errors\n        }\n    };\n}\n\n\n// Exports\n// =============================================================================\nexport default parseCss;\n","/**\n * Based on rework-vars by reworkcss\n * https://github.com/reworkcss/rework-vars\n */\n\n\n// Dependencies\n// =============================================================================\nimport balanced     from 'balanced-match';\nimport parseCss     from './parse-css';\nimport stringifyCss from './stringify-css';\nimport walkCss      from './walk-css';\n\n\n// Constants & Variables\n// =============================================================================\nconst VAR_PROP_IDENTIFIER = '--';\nconst VAR_FUNC_IDENTIFIER = 'var';\nconst variableStore       = {\n    // Persisted custom property values (matches modern browsers)\n    dom : {},\n    // Non-persisted custom properties values\n    temp: {},\n    // Persisted custom property values passed using options.variables\n    user: {}\n};\n\n\n// Functions\n// =============================================================================\n/**\n * Transforms W3C-style CSS variables to static values and returns an updated\n * CSS string.\n *\n * @param {object}   cssText CSS containing variable definitions and functions\n * @param {object}   [options] Options object\n * @param {boolean}  [options.fixNestedCalc=true] Removes nested 'calc' keywords\n *                   for legacy browser compatibility.\n * @param {boolean}  [options.onlyVars=false] Remove declarations that do not\n *                   contain a CSS variable from the return value. Note that\n *                   @font-face and @keyframe rules require all declarations to\n *                   be returned if a CSS variable is used.\n * @param {boolean}  [options.persist=false] Persists options.variables,\n *                   allowing variables set in previous calls to be applied in\n *                   subsequent calls.\n * @param {boolean}  [options.preserve=false] Preserve CSS variable definitions\n *                   and functions in the return value, allowing \"live\" variable\n *                   updates via JavaScript to continue working in browsers with\n *                   native CSS variable support.\n * @param {object}   [options.variables={}] CSS variable definitions to include\n *                   during transformation. Can be used to add new override\n *                   exisitng definitions.\n * @param {function} [options.onWarning] Callback on each transformation\n *                   warning. Passes 1) warningMessage as an argument.\n * @returns {string}\n */\nfunction transformCss(cssText, options = {}) {\n    const defaults = {\n        fixNestedCalc: true,\n        onlyVars     : false,\n        persist      : false,\n        preserve     : false,\n        variables    : {},\n        onWarning() {}\n    };\n    const settings = Object.assign({}, defaults, options, {\n        variables: fixVarObjNames(options.variables || {})\n    });\n    const map = settings.persist ? variableStore.dom : variableStore.temp = JSON.parse(JSON.stringify(variableStore.dom));\n\n    // Convert cssText to AST (this could throw errors)\n    const cssTree = parseCss(cssText, {\n        onlyVars: settings.onlyVars\n    });\n\n    // Define variables\n    cssTree.stylesheet.rules.forEach(function(rule) {\n        const varNameIndices = [];\n\n        if (rule.type !== 'rule') {\n            return;\n        }\n\n        // only variables declared for `:root` are supported\n        if (rule.selectors.length !== 1 || rule.selectors[0] !== ':root') {\n            return;\n        }\n\n        rule.declarations.forEach(function(decl, i) {\n            const prop = decl.property;\n            const value = decl.value;\n\n            if (prop && prop.indexOf(VAR_PROP_IDENTIFIER) === 0) {\n                map[prop] = value;\n                varNameIndices.push(i);\n            }\n        });\n\n        // optionally remove `--*` properties from the rule\n        if (!settings.preserve) {\n            for (let i = varNameIndices.length - 1; i >= 0; i--) {\n                rule.declarations.splice(varNameIndices[i], 1);\n            }\n        }\n    });\n\n    // Restore persisted user values\n    Object.keys(variableStore.user).forEach(key => {\n        map[key] = variableStore.user[key];\n    });\n\n    // Handle variables defined in settings.variables\n    if (Object.keys(settings.variables).length) {\n        const newRule = {\n            declarations: [],\n            selectors   : [':root'],\n            type        : 'rule'\n        };\n\n        Object.keys(settings.variables).forEach(key => {\n            const value = settings.variables[key];\n\n            // Persist settings.variables values\n            if (settings.persist) {\n                variableStore.user[key] = value;\n            }\n\n            // Update map value with settings.variables value\n            if (map[key] !== value) {\n                map[key] = value;\n\n                // Add new declaration to newRule\n                newRule.declarations.push({\n                    type    : 'declaration',\n                    property: key,\n                    value   : value\n                });\n            }\n        });\n\n        // Append new :root ruleset\n        if (settings.preserve && newRule.declarations.length) {\n            cssTree.stylesheet.rules.push(newRule);\n        }\n    }\n\n    // Resolve variables\n    walkCss(cssTree.stylesheet, function(declarations, node) {\n        let decl;\n        let resolvedValue;\n        let value;\n\n        for (let i = 0; i < declarations.length; i++) {\n            decl = declarations[i];\n            value = decl.value;\n\n            // skip comments\n            if (decl.type !== 'declaration') {\n                continue;\n            }\n\n            // skip values that don't contain variable functions\n            if (!value || value.indexOf(VAR_FUNC_IDENTIFIER + '(') === -1) {\n                continue;\n            }\n\n            resolvedValue = resolveValue(value, map, settings);\n\n            if (resolvedValue !== decl.value) {\n                if (!settings.preserve) {\n                    decl.value = resolvedValue;\n                }\n                else {\n                    declarations.splice(i, 0, {\n                        type    : decl.type,\n                        property: decl.property,\n                        value   : resolvedValue\n                    });\n\n                    // skip ahead of preserved declaration\n                    i++;\n                }\n            }\n        }\n    });\n\n    // Fix nested calc() values\n    if (settings.fixNestedCalc) {\n        fixNestedCalc(cssTree.stylesheet.rules);\n    }\n\n    // Return CSS string\n    return stringifyCss(cssTree);\n}\n\n\n// Functions (Private)\n// =============================================================================\n/**\n * Removes nested calc keywords for legacy browser compatibility.\n * Example: calc(1 + calc(2 + calc(3 + 3))) => calc(1 + (2 + (3 + 3)))\n *\n * @param {array} rules\n */\nfunction fixNestedCalc(rules) {\n    const reCalcExp = /(-[a-z]+-)?calc\\(/; // Match \"calc(\" or \"-vendor-calc(\"\n\n    rules.forEach(rule => {\n        if (rule.declarations) {\n            rule.declarations.forEach(decl => {\n                let oldValue = decl.value;\n                let newValue = '';\n\n                while (reCalcExp.test(oldValue)) {\n                    const rootCalc = balanced('calc(', ')', oldValue || '');\n\n                    oldValue = oldValue.slice(rootCalc.end);\n\n                    while (reCalcExp.test(rootCalc.body)) {\n                        const nestedCalc = balanced(reCalcExp, ')', rootCalc.body);\n\n                        rootCalc.body = `${nestedCalc.pre}(${nestedCalc.body})${nestedCalc.post}`;\n                    }\n\n                    newValue += `${rootCalc.pre}calc(${rootCalc.body}`;\n                    newValue += !reCalcExp.test(oldValue) ? `)${rootCalc.post}` : '';\n                }\n\n                decl.value = newValue || decl.value;\n            });\n        }\n    });\n}\n\n/**\n * Converts all object property names to leading '--' style\n *\n * @param {object} varObj Object containing CSS custom property name:value pairs\n * @returns {object}\n */\nfunction fixVarObjNames(varObj) {\n    const userVarNames        = Object.keys(varObj);\n    const reLeadingHyphens    = /^-{2}/;\n    const hasMalformedVarName = userVarNames.some(key => !reLeadingHyphens.test(key));\n\n    if (hasMalformedVarName) {\n        varObj = userVarNames.reduce((obj, value) => {\n            const key = reLeadingHyphens.test(value) ? value : `--${value.replace(/^-+/, '')}`;\n\n            obj[key] = varObj[value];\n\n            return obj;\n        }, {});\n    }\n\n    return varObj;\n}\n/**\n * Resolves CSS var() function(s) with `map` data or fallback value(s). Returns\n * original `value` if unable to resolve.\n *\n * @param {string} value String containing CSS var() functions to resolve\n * @param {object} map CSS custom property key/values\n * @param {object} settings Settings object passed from transformCss()\n * @param {string} [__recursiveFallback] Fallback when unable to resolve CSS\n *                 var() function to a map or fallback value. Allows restoring\n *                 original var() function from recursive resolveValue() calls.\n * @return {string} CSS value with var() function(s) resolved to map or fallback\n *                  value.\n *\n * @example\n *\n *   resolveValue('10px var(--x) 30px', {'--x':'20px'}, {...settings});\n *   // => '10px 20px 30px'\n *\n *   resolveValue('10px', {}, {...settings});\n *   // => '10px'\n */\nfunction resolveValue(value, map, settings = {}, __recursiveFallback) {\n    if (value.indexOf('var(') === -1) {\n        return value;\n    }\n\n    const valueData = balanced('(', ')', value);\n\n    /**\n     * Resolves contents of CSS custom property function\n     *\n     * @param {string} value String containing contents of CSS var() function\n     * @returns {string}\n     *\n     * @example\n     *\n     *   resolveFunc('--x, var(--y, green)')\n     *   // => map['--x'] or map['--y'] or 'green'\n     *\n     *   resolveFunc('--fail')\n     *   // => 'var(--fail)' when map['--fail'] does not exist\n     */\n    function resolveFunc(value) {\n        const name               = value.split(',')[0].replace(/[\\s\\n\\t]/g, '');\n        const fallback           = (value.match(/(?:\\s*,\\s*){1}(.*)?/) || [])[1];\n        const match              = map.hasOwnProperty(name) ? String(map[name]) : undefined;\n        const replacement        = match || (fallback ? String(fallback) : undefined);\n        const unresolvedFallback = __recursiveFallback || value;\n\n        if (!match) {\n            settings.onWarning(`variable \"${name}\" is undefined`);\n        }\n\n        if (replacement && replacement !== 'undefined' && replacement.length > 0) {\n            return resolveValue(replacement, map, settings, unresolvedFallback);\n        }\n        else {\n            return `var(${unresolvedFallback})`;\n        }\n    }\n\n    // No balanced brace data\n    if (!valueData) {\n        if (value.indexOf('var(') !== -1) {\n            settings.onWarning(`missing closing \")\" in the value \"${value}\"`);\n        }\n\n        return value;\n    }\n    // Balanced brace data is var() function\n    else if (valueData.pre.slice(-3) === 'var') {\n        const isEmptyVarFunc = valueData.body.trim().length === 0;\n\n        if (isEmptyVarFunc) {\n            settings.onWarning('var() must contain a non-whitespace string');\n\n            return value;\n        }\n        else {\n            return (\n                valueData.pre.slice(0,-3)\n                + resolveFunc(valueData.body)\n                + resolveValue(valueData.post, map, settings)\n            );\n        }\n    }\n    // Balanced brace data is NOT var() function\n    else {\n        return (\n            valueData.pre\n            + `(${resolveValue(valueData.body, map, settings)})`\n            + resolveValue(valueData.post, map, settings)\n        );\n    }\n}\n\n\n// Exports\n// =============================================================================\nexport default transformCss;\nexport { fixVarObjNames, variableStore };","/**\n * Based on rework-visit by reworkcss\n * https://github.com/reworkcss/rework-visit\n */\n\n\n// Functions\n// =============================================================================\n/**\n * Visit `node` declarations recursively and invoke `fn(declarations, node)`.\n *\n * @param {object} node\n * @param {function} fn\n */\nfunction walkCss(node, fn){\n    node.rules.forEach(function(rule){\n        // @media etc\n        if (rule.rules) {\n            walkCss(rule, fn);\n\n            return;\n        }\n\n        // keyframes\n        if (rule.keyframes) {\n            rule.keyframes.forEach(function(keyframe){\n                if (keyframe.type === 'keyframe') {\n                    fn(keyframe.declarations, rule);\n                }\n            });\n\n            return;\n        }\n\n        // @charset, @import etc\n        if (!rule.declarations) {\n            return;\n        }\n\n        fn(rule.declarations, node);\n    });\n}\n\n\n// Exports\n// =============================================================================\nexport default walkCss;\n","/**\n * Based on css parser/compiler by NxChg\n * https://github.com/NxtChg/pieces/tree/master/js/css_parser\n */\n\n\n// Functions\n// =============================================================================\n/**\n * Compiles CSS AST to string\n *\n * @param {object}   tree CSS AST object\n * @param {string}   [delim=''] CSS rule delimiter\n * @param {function} cb Function to be called before each node is processed\n * @returns {string}\n */\nfunction stringifyCss(tree, delim = '', cb) {\n    const renderMethods = {\n        charset(node) {\n            return '@charset ' + node.name + ';';\n        },\n        comment(node) {\n            // Preserve ponyfill marker comments\n            return node.comment.indexOf('__CSSVARSPONYFILL') === 0 ? '/*' + node.comment + '*/' : '';\n        },\n        'custom-media'(node) {\n            return '@custom-media ' + node.name + ' ' + node.media + ';';\n        },\n        declaration(node) {\n            return node.property + ':' + node.value + ';';\n        },\n        document(node) {\n            return '@' + (node.vendor || '') + 'document ' + node.document + '{' + visit(node.rules) + '}';\n        },\n        'font-face'(node) {\n            return '@font-face' + '{' + visit(node.declarations) + '}';\n        },\n        host(node) {\n            return '@host' + '{' + visit(node.rules) + '}';\n        },\n        import(node) {\n            // FIXED\n            return '@import ' + node.name + ';';\n        },\n        keyframe(node) {\n            return node.values.join(',') + '{' + visit(node.declarations) + '}';\n        },\n        keyframes(node) {\n            return '@' + (node.vendor || '') + 'keyframes ' + node.name + '{' + visit(node.keyframes) + '}';\n        },\n        media(node) {\n            return '@media ' + node.media + '{' + visit(node.rules) + '}';\n        },\n        namespace(node) {\n            return '@namespace ' + node.name + ';';\n        },\n        page(node) {\n            return '@page ' + (node.selectors.length ? node.selectors.join(', ') : '') + '{' + visit(node.declarations) + '}';\n        },\n        rule(node) {\n            const decls = node.declarations;\n\n            if (decls.length) {\n                return node.selectors.join(',') + '{' + visit(decls) + '}';\n            }\n        },\n        supports(node) {\n            // FIXED\n            return '@supports ' + node.supports + '{' + visit(node.rules) + '}';\n        }\n    };\n\n    function visit(nodes) {\n        let buf = '';\n\n        for (let i = 0; i < nodes.length; i++) {\n            const n = nodes[i];\n\n            if (cb) {\n                cb(n);\n            }\n\n            const txt = renderMethods[n.type](n);\n\n            if (txt) {\n                buf += txt;\n\n                if (txt.length && n.selectors) {\n                    buf += delim;\n                }\n            }\n        }\n\n        return buf;\n    }\n\n    return visit(tree.stylesheet.rules);\n}\n\n\n// Exports\n// =============================================================================\nexport default stringifyCss;\n","// Dependencies\n// =============================================================================\nimport getCssData          from 'get-css-data';\nimport transformCss        from './transform-css';\nimport { fixVarObjNames }  from './transform-css';\nimport { variableStore }   from './transform-css';\n\n\n// Constants & Variables\n// =============================================================================\nconst isBrowser       = typeof window !== 'undefined';\nconst isNativeSupport = isBrowser && window.CSS && window.CSS.supports && window.CSS.supports('(--a: 0)');\n\nconst defaults = {\n    // Targets\n    rootElement  : isBrowser ? document : null,\n    shadowDOM    : false,\n    // Sources\n    include      : 'style,link[rel=stylesheet]',\n    exclude      : '',\n    variables    : {},    // transformCss\n    // Options\n    fixNestedCalc: true,  // transformCss\n    incremental  : true,  // cssVars\n    onlyLegacy   : true,  // cssVars\n    onlyVars     : false, // cssVars, parseCSS\n    preserve     : false, // transformCss\n    silent       : false, // cssVars\n    updateDOM    : true,  // cssVars\n    updateURLs   : true,  // cssVars\n    watch        : null,  // cssVars\n    // Callbacks\n    onBeforeSend() {},    // cssVars\n    onSuccess() {},       // cssVars\n    onWarning() {},       // transformCss\n    onError() {},         // cssVars\n    onComplete() {}       // cssVars\n};\nconst regex = {\n    // CSS comments\n    cssComments: /\\/\\*[\\s\\S]+?\\*\\//g,\n    // CSS keyframes (@keyframes & @-VENDOR-keyframes)\n    cssKeyframes: /@(?:-\\w*-)?keyframes/,\n    // CSS root vars\n    cssRootRules: /(?::root\\s*{\\s*[^}]*})/g,\n    // CSS url(...) values\n    cssUrls: /url\\((?!['\"]?(?:data|http|\\/\\/):)['\"]?([^'\")]*)['\"]?\\)/g,\n    // CSS variable declarations\n    cssVarDecls: /(?:[\\s;]*)(-{2}\\w[\\w-]*)(?:\\s*:\\s*)([^;]*);/g,\n    // CSS variable :root declarations and var() function values\n    cssVars: /(?:(?::root\\s*{\\s*[^;]*;*\\s*)|(?:var\\(\\s*))(--[^:)]+)(?:\\s*[:)])/\n};\n\n// Counter used to track ponyfill executions and generate date attribute values\nlet cssVarsCounter = 0;\n\n// Mutation observer reference created via options.watch\nlet cssVarsObserver = null;\n\n// Debounce timer used with options.watch\nlet debounceTimer = null;\n\n// Indicates if document-level custom property values have been parsed, stored,\n// and ready for use with options.shadowDOM\nlet isShadowDOMReady = false;\n\n\n// Functions\n// =============================================================================\n/**\n * Fetches, parses, and transforms CSS custom properties from specified\n * <style> and <link> elements into static values, then appends a new <style>\n * element with static values to the DOM to provide CSS custom property\n * compatibility for legacy browsers. Also provides a single interface for\n * live updates of runtime values in both modern and legacy browsers.\n *\n * @preserve\n * @param {object}   [options] Options object\n * @param {object}   [options.rootElement=document] Root element to traverse for\n *                   <link> and <style> nodes.\n * @param {boolean}  [options.shadowDOM=false] Determines if shadow DOM <link>\n *                   and <style> nodes will be processed.\n * @param {string}   [options.include=\"style,link[rel=stylesheet]\"] CSS selector\n *                   matching <link re=\"stylesheet\"> and <style> nodes to\n *                   process\n * @param {string}   [options.exclude] CSS selector matching <link\n *                   rel=\"stylehseet\"> and <style> nodes to exclude from those\n *                   matches by options.include\n * @param {object}   [options.variables] A map of custom property name/value\n *                   pairs. Property names can omit or include the leading\n *                   double-hyphen (—), and values specified will override\n *                   previous values.\n * @param {boolean}  [options.fixNestedCalc=true] Remove nested 'calc' keywords\n *                   for legacy browser compatibility.\n * @param {boolean}  [options.incremental=true] Determines if the ponyfill will\n *                   generate CSS for new <link> and <style> nodes only unless\n *                   reprocessing all nodes is required.\n * @param {boolean}  [options.onlyLegacy=true] Determines if the ponyfill will\n *                   only generate legacy-compatible CSS in browsers that lack\n *                   native support (i.e., legacy browsers)\n * @param {boolean}  [options.onlyVars=false] Determines if CSS rulesets and\n *                   declarations without a custom property value should be\n *                   removed from the ponyfill-generated CSS\n * @param {boolean}  [options.preserve=false] Determines if the original CSS\n *                   custom property declaration will be retained in the\n *                   ponyfill-generated CSS.\n * @param {boolean}  [options.silent=false] Determines if warning and error\n *                   messages will be displayed on the console\n * @param {boolean}  [options.updateDOM=true] Determines if the ponyfill will\n *                   update the DOM after processing CSS custom properties\n * @param {boolean}  [options.updateURLs=true] Determines if the ponyfill will\n *                   convert relative url() paths to absolute urls.\n * @param {boolean}  [options.watch=false] Determines if a MutationObserver will\n *                   be created that will execute the ponyfill when a <link> or\n *                   <style> DOM mutation is observed.\n * @param {function} [options.onBeforeSend] Callback before XHR is sent. Passes\n *                   1) the XHR object, 2) source node reference, and 3) the\n *                   source URL as arguments.\n * @param {function} [options.onSuccess] Callback after CSS data has been\n *                   collected from each node and before CSS custom properties\n *                   have been transformed. Allows modifying the CSS data before\n *                   it is transformed by returning any string value (or false\n *                   to skip). Passes 1) CSS text, 2) source node reference, and\n *                   3) the source URL as arguments.\n * @param {function} [options.onWarning] Callback after each CSS parsing warning\n *                   has occurred. Passes 1) a warning message as an argument.\n * @param {function} [options.onError] Callback after a CSS parsing error has\n *                   occurred or an XHR request has failed. Passes 1) an error\n *                   message, and 2) source node reference, 3) xhr, and 4 url as\n *                   arguments.\n * @param {function} [options.onComplete] Callback after all CSS has been\n *                   processed, legacy-compatible CSS has been generated, and\n *                   (optionally) the DOM has been updated. Passes 1) a CSS\n *                   string with CSS variable values resolved, 2) a reference to\n *                   the appended <style> node, 3) an object containing all\n *                   custom properies names and values, and 4) the ponyfill\n *                   execution time in milliseconds.\n *\n * @example\n *\n *   cssVars({\n *     rootElement  : document,\n *     shadowDOM    : false,\n *     include      : 'style,link[rel=\"stylesheet\"]',\n *     exclude      : '',\n *     variables    : {},\n *     fixNestedCalc: true,\n *     incremental  : true,\n *     onlyLegacy   : true,\n *     onlyVars     : false,\n *     preserve     : false,\n *     silent       : false,\n *     updateDOM    : true,\n *     updateURLs   : true,\n *     watch        : false,\n *     onBeforeSend(xhr, node, url) {},\n *     onSuccess(cssText, node, url) {},\n *     onWarning(message) {},\n *     onError(message, node, xhr, url) {},\n *     onComplete(cssText, styleNode, cssVariables, benchmark) {}\n *   });\n */\nfunction cssVars(options = {}) {\n    const msgPrefix = 'cssVars(): ';\n    const settings  = Object.assign({}, defaults, options);\n\n    function handleError(message, sourceNode, xhr, url) {\n        /* istanbul ignore next */\n        if (!settings.silent) {\n            // eslint-disable-next-line\n            console.error(`${msgPrefix}${message}\\n`, sourceNode);\n        }\n\n        settings.onError(message, sourceNode, xhr, url);\n    }\n\n    function handleWarning(message) {\n        /* istanbul ignore next */\n        if (!settings.silent) {\n            // eslint-disable-next-line\n            console.warn(`${msgPrefix}${message}`);\n        }\n\n        settings.onWarning(message);\n    }\n\n    // Exit if non-browser environment (e.g. Node)\n    if (!isBrowser) {\n        return;\n    }\n\n    // If benchmark key is not availalbe, this is a non-recursive call\n    if (!settings.__benchmark) {\n        // Store benchmark start time\n        settings.__benchmark = getTimeStamp();\n\n        // Fix malformed custom property names (e.g. \"color\" or \"-color\")\n        settings.variables = fixVarObjNames(settings.variables);\n    }\n\n    // Always exclude nodes marked by the ponyfill on previous calls\n    settings.exclude = `[data-cssvars],[data-cssvars-remove]${settings.exclude ? ',' + settings.exclude : ''}`;\n\n    // Prepare for full update\n    if (!settings.incremental) {\n        const prevNodes = settings.rootElement.querySelectorAll('[data-cssvars]');\n\n        // Remove main ponyfill attribute from input nodes\n        Array.apply(null, prevNodes).forEach(node => {\n            node.removeAttribute('data-cssvars');\n        });\n    }\n\n    // Disconnect existing MutationObserver\n    if (settings.watch === false && cssVarsObserver) {\n        cssVarsObserver.disconnect();\n    }\n\n    // Add / recreate MutationObserver\n    if (settings.watch) {\n        addMutationObserver(settings);\n        cssVarsDebounced(settings);\n    }\n    // Verify readyState to ensure all <link> and <style> nodes are available\n    else if (document.readyState !== 'loading') {\n        const isShadowElm = settings.shadowDOM || settings.rootElement.shadowRoot || settings.rootElement.host;\n\n        // Native support\n        if (isNativeSupport && settings.onlyLegacy) {\n            // Apply settings.variables\n            if (settings.updateDOM) {\n                const targetElm = settings.rootElement.host || (settings.rootElement === document ? document.documentElement : settings.rootElement);\n\n                // Set variables using native methods\n                Object.keys(settings.variables).forEach(key => {\n                    targetElm.style.setProperty(key, settings.variables[key]);\n                });\n            }\n        }\n        // Ponyfill: Handle rootElement set to a shadow host or root\n        else if (isShadowElm && !isShadowDOMReady) {\n            // Get all document-level CSS\n            getCssData({\n                rootElement: defaults.rootElement,\n                include: defaults.include,\n                exclude: settings.exclude,\n                onSuccess(cssText, node, url) {\n                    const cssRootRules = (cssText.match(regex.cssRootRules) || []).join('');\n\n                    // Return only matching :root {...} blocks\n                    return cssRootRules || false;\n                },\n                onComplete(cssText, cssArray, nodeArray) {\n                    // Transform CSS, which stores custom property values from\n                    // cssText in variableStore. This step ensures that\n                    // variableStore contains all document-level custom property\n                    // values for subsequent ponyfill calls.\n                    transformCss(cssText, {\n                        persist: true\n                    });\n\n                    isShadowDOMReady = true;\n\n                    // Call the ponyfill again to process the rootElement\n                    // initially specified. Values stored in variableStore will\n                    // be used to transform values in shadow host/root elements.\n                    cssVars(settings);\n                }\n            });\n        }\n        // Ponyfill: Process CSS\n        else {\n            getCssData({\n                rootElement: settings.rootElement,\n                include: settings.include,\n                exclude: settings.exclude,\n                // This filter does a test on each block of CSS. An additional\n                // filter is used in the parser to remove individual\n                // declarations.\n                filter: settings.onlyVars ? regex.cssVars : null,\n                onBeforeSend: settings.onBeforeSend,\n                onSuccess(cssText, node, url) {\n                    const returnVal = settings.onSuccess(cssText, node, url);\n\n                    cssText = returnVal !== undefined && Boolean(returnVal) === false ? '' : returnVal || cssText;\n\n                    // Convert relative url(...) values to absolute\n                    if (settings.updateURLs) {\n                        const cssUrls = cssText\n                            // Remove comments to avoid processing @import in comments\n                            .replace(regex.cssComments, '')\n                            // Match url(...) values\n                            .match(regex.cssUrls) || [];\n\n                        cssUrls.forEach(cssUrl => {\n                            const oldUrl = cssUrl.replace(regex.cssUrls, '$1');\n                            const newUrl = getFullUrl(oldUrl, url);\n\n                            cssText = cssText.replace(cssUrl, cssUrl.replace(oldUrl, newUrl));\n                        });\n                    }\n\n                    return cssText;\n                },\n                onError(xhr, node, url) {\n                    const responseUrl = xhr.responseURL || getFullUrl(url, location.href);\n                    const statusText  = xhr.statusText ? `(${xhr.statusText})` : 'Unspecified Error' + (xhr.status === 0 ? ' (possibly CORS related)' : '');\n                    const errorMsg    = `CSS XHR Error: ${responseUrl} ${xhr.status} ${statusText}`;\n\n                    handleError(errorMsg, node, xhr, responseUrl);\n                },\n                onComplete(cssText, cssArray, nodeArray = []) {\n                    let doUpdate = true;\n\n                    if (settings.incremental) {\n                        const cssRootRules = (cssText.match(regex.cssRootRules) || []).join('');\n                        const isNewVarVal  = hasNewVarVal(variableStore.dom, settings.variables, cssRootRules);\n                        const isNewVarDecl = isNewVarVal ? null : hasNewVarDecl(variableStore.dom, settings.variables, cssRootRules);\n                        const isSkip       = !isNewVarDecl && !isNewVarVal && nodeArray.length;\n\n                        // Abort update\n                        if (isSkip || isNewVarVal) {\n                            doUpdate = false;\n                        }\n\n                        // Skip\n                        if (isSkip) {\n                            // Add skip mark\n                            for (let i = 0, len = nodeArray.length; i < len; i++) {\n                                nodeArray[i].setAttribute('data-cssvars', 'skip');\n                            }\n                        }\n\n                        // Force full update\n                        if (isNewVarVal) {\n                            const prevOutNodes = settings.rootElement.querySelectorAll('style[data-cssvars=\"out\"]');\n\n                            Array.apply(null, prevOutNodes).forEach(node => {\n                                node.setAttribute('data-cssvars-remove', '');\n                            });\n\n                            settings.incremental = false;\n                            cssVars(settings);\n                        }\n                    }\n\n                    if (doUpdate) {\n                        const cssMarker = /\\/\\*__CSSVARSPONYFILL-(\\d+)__\\*\\//g;\n                        let hasKeyframesWithVars;\n\n                        // Concatenate cssArray items, replacing those that do\n                        // not contain a CSS custom property declaraion or\n                        // function with a temporary marker . After the CSS is\n                        // transformed, the markers will be replaced with the\n                        // matching cssArray item. This optimization is done to\n                        // avoid processing CSS that will not change as a\n                        // results of the ponyfill.\n                        cssText = cssArray.map((css, i) => regex.cssVars.test(css) ? css : `/*__CSSVARSPONYFILL-${i}__*/`).join('');\n\n                        try {\n                            cssText = transformCss(cssText, {\n                                fixNestedCalc: settings.fixNestedCalc,\n                                onlyVars     : settings.onlyVars,\n                                persist      : settings.updateDOM,\n                                preserve     : settings.preserve,\n                                variables    : settings.variables,\n                                onWarning    : handleWarning\n                            });\n\n                            hasKeyframesWithVars = regex.cssKeyframes.test(cssText);\n\n                            // Replace markers with appropriate cssArray item\n                            cssText = cssText.replace(cssMarker, (match, group1) => cssArray[group1]);\n                        }\n                        catch(err) {\n                            let errorThrown = false;\n\n                            // Iterate cssArray to detect CSS text and node(s)\n                            // responsibile for error.\n                            cssArray.forEach((cssText, i) => {\n                                try {\n                                    cssText = transformCss(cssText, settings);\n                                }\n                                catch(err) {\n                                    const errorNode = nodeArray[i - 0];\n\n                                    errorThrown = true;\n                                    handleError(err.message, errorNode);\n                                }\n                            });\n\n                            // In the event the error thrown was not due to\n                            // transformCss, handle the original error.\n                            /* istanbul ignore next */\n                            if (!errorThrown) {\n                                handleError(err.message || err);\n                            }\n                        }\n\n                        // Process shadow DOM\n                        if (settings.shadowDOM) {\n                            const elms = [\n                                settings.rootElement,\n                                ...settings.rootElement.querySelectorAll('*')\n                            ];\n\n                            // Iterates over all elements in rootElement and calls\n                            // cssVars on each shadowRoot, passing document-level\n                            // custom properties as options.variables.\n                            for (let i = 0, elm; (elm = elms[i]); ++i) {\n                                if (elm.shadowRoot && elm.shadowRoot.querySelector('style')) {\n                                    const shadowSettings = Object.assign({}, settings, {\n                                        rootElement: elm.shadowRoot,\n                                        variables  : variableStore.dom\n                                    });\n\n                                    cssVars(shadowSettings);\n                                }\n                            }\n                        }\n\n                        if (cssText.length || nodeArray.length) {\n                            let styleNode = null;\n\n                            if (settings.updateDOM) {\n                                const cssNodes = nodeArray || settings.rootElement.querySelectorAll('link[rel*=\"stylesheet\"],style');\n\n                                // Increment ponyfill counter\n                                cssVarsCounter++;\n\n                                styleNode = document.createElement('style');\n\n                                // Set in/out and job number as data attributes\n                                styleNode.setAttribute('data-cssvars-job', cssVarsCounter);\n                                styleNode.setAttribute('data-cssvars', 'out');\n                                nodeArray.forEach(node => {\n                                    node.setAttribute('data-cssvars-job', cssVarsCounter);\n                                    node.setAttribute('data-cssvars', 'in');\n                                });\n\n                                // Insert ponyfill <style> after last node\n                                if (cssNodes) {\n                                    const lastNode = cssNodes[cssNodes.length - 1];\n\n                                    lastNode.parentNode.insertBefore(styleNode, lastNode.nextSibling);\n                                }\n                                // Insert ponyfill <style> after last link/style node\n                                else {\n                                    const targetNode = settings.rootElement.head || settings.rootElement.body || settings.rootElement;\n\n                                    targetNode.appendChild(styleNode);\n                                }\n                            }\n\n                            // Callback and get (optional) return value\n                            cssText = settings.onComplete(\n                                cssText,\n                                styleNode,\n                                JSON.parse(JSON.stringify(settings.updateDOM ? variableStore.dom : variableStore.temp)),\n                                getTimeStamp() - settings.__benchmark\n                            ) || cssText;\n\n                            if (settings.updateDOM) {\n                                styleNode.textContent = cssText;\n\n                                if (!settings.incremental) {\n                                    const removeNodes = settings.rootElement.querySelectorAll('style[data-cssvars-remove]');\n\n                                    Array.apply(null, removeNodes).forEach(node => {\n                                        node.parentNode.removeChild(node);\n                                    });\n                                }\n\n                                if (hasKeyframesWithVars) {\n                                    fixKeyframes(settings.rootElement);\n                                }\n                            }\n                        }\n                    }\n                }\n            });\n        }\n    }\n    // Delay function until DOMContentLoaded event is fired\n    /* istanbul ignore next */\n    else {\n        document.addEventListener('DOMContentLoaded', function init(evt) {\n            cssVars(options);\n\n            document.removeEventListener('DOMContentLoaded', init);\n        });\n    }\n}\n\n\n// Functions (Private)\n// =============================================================================\n/**\n * Creates mutation observer that executes the ponyfill when a <link> or <style>\n * DOM mutation is observed.\n *\n * @param {object} settings\n */\nfunction addMutationObserver(settings) {\n    function isLink(node) {\n        const isStylesheet = node.tagName === 'LINK' && (node.getAttribute('rel') || '').indexOf('stylesheet') !== -1;\n\n        return isStylesheet && !node.disabled;\n    }\n    function isStyle(node) {\n        return node.tagName === 'STYLE' && !node.disabled;\n    }\n    function isValidAddMutation(mutationNodes) {\n        return Array.apply(null, mutationNodes).some(node => {\n            const isElm           = node.nodeType === 1;\n            const hasAttr         = isElm && node.hasAttribute('data-cssvars');\n            const isStyleWithVars = isStyle(node) && regex.cssVars.test(node.textContent);\n\n            return !hasAttr && (isLink(node) || isStyleWithVars);\n        });\n    }\n    function isValidRemoveMutation(mutationNodes) {\n        return Array.apply(null, mutationNodes).some(node => {\n            const isElm    = node.nodeType === 1;\n            const hasAttr  = isElm && node.hasAttribute('data-cssvars');\n            const isRemove = isElm && node.hasAttribute('data-cssvars-remove');\n            const isSkip   = isElm && node.getAttribute('data-cssvars') === 'skip';\n            const isValid  = hasAttr && !isRemove && !isSkip && (isStyle(node) || isLink(node));\n\n            if (isValid) {\n                const dataInOut = node.getAttribute('data-cssvars');\n                const dataJob   = node.getAttribute('data-cssvars-job');\n                const jobNodes  = Array.apply(null, settings.rootElement.querySelectorAll(`style[data-cssvars-job=\"${dataJob}\"]`));\n\n                if (dataInOut === 'in') {\n                    const inNodes = jobNodes.filter(node => node.getAttribute('data-cssvars') === 'in');\n                    const outNode = jobNodes.filter(node => node.getAttribute('data-cssvars') === 'out')[0];\n\n                    // Force full update if \"in\" nodes from the same job exist\n                    if (inNodes.length) {\n                        settings.incremental = false;\n                    }\n\n                    // Remove output <style> node\n                    if (outNode) {\n                        outNode.parentNode.removeChild(outNode);\n                    }\n                }\n                else if (dataInOut === 'out') {\n                    // Force full update\n                    settings.incremental = false;\n\n                    // Remove ponyfill-related attributes from input nodes\n                    Array.apply(null, jobNodes).forEach(node => {\n                        node.removeAttribute('data-cssvars');\n                        node.removeAttribute('data-cssvars-job');\n                    });\n                }\n            }\n\n            return isValid;\n        });\n    }\n\n    if (!window.MutationObserver) {\n        return;\n    }\n\n    if (cssVarsObserver) {\n        cssVarsObserver.disconnect();\n    }\n\n    settings.watch = defaults.watch;\n\n    cssVarsObserver = new MutationObserver(function(mutations) {\n        const hasValidMutation = mutations.some((mutation) => {\n            let isValid = false;\n\n            if (mutation.type === 'attributes') {\n                isValid = isLink(mutation.target);\n            }\n            else if (mutation.type === 'childList') {\n                isValid = isValidAddMutation(mutation.addedNodes) || isValidRemoveMutation(mutation.removedNodes);\n            }\n\n            return isValid;\n        });\n\n        if (hasValidMutation) {\n            cssVarsDebounced(settings);\n        }\n    });\n\n    cssVarsObserver.observe(document.documentElement, {\n        attributes     : true,\n        attributeFilter: ['disabled', 'href'],\n        childList      : true,\n        subtree        : true\n    });\n}\n\n/**\n * Debounces cssVars() calls\n *\n * @param {object} settings\n */\nfunction cssVarsDebounced(settings) {\n    clearTimeout(debounceTimer);\n    debounceTimer = setTimeout(function() {\n        settings.__benchmark = null;\n        cssVars(settings);\n    }, 100);\n}\n\n/**\n * Fixes issue with keyframe properties set using CSS custom property not being\n * applied properly in some legacy (IE) and modern (Safari) browsers.\n *\n * @param {object} rootElement\n */\nfunction fixKeyframes(rootElement) {\n    const animationNameProp = [\n        'animation-name',\n        '-moz-animation-name',\n        '-webkit-animation-name'\n    ].filter(prop => getComputedStyle(document.body)[prop])[0];\n\n    if (animationNameProp) {\n        const allNodes      = rootElement.getElementsByTagName('*');\n        const keyframeNodes = [];\n        const nameMarker    = '__CSSVARSPONYFILL-KEYFRAMES__';\n\n        // Modify animation name\n        for (let i = 0, len = allNodes.length; i < len; i++) {\n            const node          = allNodes[i];\n            const animationName = getComputedStyle(node)[animationNameProp];\n\n            if (animationName !== 'none') {\n                node.style[animationNameProp] += nameMarker;\n                keyframeNodes.push(node);\n            }\n        }\n\n        // Force reflow\n        void document.body.offsetHeight;\n\n        // Restore animation name\n        for (let i = 0, len = keyframeNodes.length; i < len; i++) {\n            const nodeStyle = keyframeNodes[i].style;\n\n            nodeStyle[animationNameProp] = nodeStyle[animationNameProp].replace(nameMarker, '');\n        }\n    }\n}\n\n/**\n * Returns fully qualified URL from relative URL and (optional) base URL\n *\n * @param   {string} url\n * @param   {string} [base=location.href]\n * @returns {string}\n */\nfunction getFullUrl(url, base = location.href) {\n    const d = document.implementation.createHTMLDocument('');\n    const b = d.createElement('base');\n    const a = d.createElement('a');\n\n    d.head.appendChild(b);\n    d.body.appendChild(a);\n    b.href = base;\n    a.href = url;\n\n    return a.href;\n}\n\n/**\n * Returns a time stamp in milliseconds\n *\n * @returns {number}\n */\nfunction getTimeStamp() {\n    return isBrowser && window.performance.now ? performance.now() : new Date().getTime();\n}\n\nfunction hasNewVarDecl(oldVarsObj, newVarsObj = {}, cssText = '') {\n    return Boolean(\n        // New declaration in newVarsObj\n        Object.keys(newVarsObj).some(key => !oldVarsObj.hasOwnProperty(key)) ||\n        // New declaration in cssText\n        (function hasNewVarDeclInCSS() {\n            let cssVarDeclsMatch;\n\n            // Reset regex\n            regex.cssVarDecls.lastIndex = 0;\n\n            while((cssVarDeclsMatch = regex.cssVarDecls.exec(cssText)) !== null) {\n                const prop      = cssVarDeclsMatch[1];\n                const isNewDecl = !oldVarsObj.hasOwnProperty(prop);\n\n                if (isNewDecl) {\n                    return true;\n                }\n            }\n        })()\n    );\n}\n\nfunction hasNewVarVal(oldVarsObj, newVarsObj = {}, cssText = '') {\n    return Boolean(\n        // Check newVarsObj\n        Object.keys(newVarsObj).some(key => newVarsObj[key] !== oldVarsObj[key]) ||\n        // Check cssText\n        (function hasNewVarValInCSS() {\n            let cssVarDeclsMatch;\n\n            // Reset regex\n            regex.cssVarDecls.lastIndex = 0;\n\n            while((cssVarDeclsMatch = regex.cssVarDecls.exec(cssText)) !== null) {\n                const prop       = cssVarDeclsMatch[1];\n                const value      = cssVarDeclsMatch[2];\n                const isNewValue = oldVarsObj.hasOwnProperty(prop) && oldVarsObj[prop] !== value;\n\n                if (isNewValue) {\n                    return true;\n                }\n            }\n        })()\n    );\n}\n\n// Export\n// =============================================================================\nexport default cssVars;\n"],"names":["getUrls","urls","options","arguments","length","undefined","settings","mimeType","onBeforeSend","Function","prototype","onSuccess","onError","onComplete","urlArray","Array","isArray","urlQueue","apply","map","x","isValidCss","trim","charAt","xhr","urlIndex","responseText","returnVal","indexOf","parser","document","createElement","forEach","url","i","setAttribute","href","String","Boolean","all","window","atob","host","split","location","protocol","xdr","XDomainRequest","open","timeout","onprogress","ontimeout","onload","onerror","err","setTimeout","send","console","warn","concat","XMLHttpRequest","overrideMimeType","onreadystatechange","readyState","status","getCssData","regex","cssComments","cssImports","rootElement","include","exclude","filter","useCSSOM","sourceNodes","querySelectorAll","node","elm","selector","matches","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","call","cssArray","handleComplete","cssText","join","handleSuccess","cssIndex","sourceUrl","resolveImports","baseUrl","callbackFn","__errorData","__errorRules","importData","parseImportData","rules","absoluteUrls","responseImportData","rule","replace","absoluteRules","push","responseArray","importText","resolvedCssText","errorData","data","test","ignoreRules","match","getFullUrl","oldUrl","newUrl","linkHref","getAttribute","linkRel","isLink","nodeName","toLowerCase","isStyle","textContent","sheet","cssRules","base","d","implementation","createHTMLDocument","b","a","head","appendChild","body","balanced","str","RegExp","maybeMatch","r","range","start","end","pre","slice","post","reg","m","begs","beg","left","right","result","ai","bi","pop","parseCss","css","_extends","onlyVars","removeComments","error","msg","Error","re","exec","close","whitespace","comment","type","comments","c","cmnts","s","declaration","comment_regexp","prop","val","ret","property","value","declarations","decls","keyframe","vals","values","at_rule","vendor","frame","name","frames","keyframes","at_keyframes","supports","at_supports","at_host","media","at_media","at_custom_m","selectors","at_page","at_document","at_fontface","at_x","hasVarFunc","some","decl","obj","balancedMatch","hasVarDecl","sel","core","stylesheet","errors","VAR_PROP_IDENTIFIER","VAR_FUNC_IDENTIFIER","variableStore","dom","temp","user","transformCss","reCalcExp","fixNestedCalc","persist","preserve","variables","onWarning","fixVarObjNames","JSON","parse","stringify","cssTree","varNameIndices","splice","Object","keys","key","newRule","walkCss","fn","resolvedValue","resolveValue","oldValue","newValue","rootCalc","nestedCalc","tree","delim","cb","renderMethods","charset","visit","import","namespace","page","nodes","buf","n","txt","stringifyCss","varObj","userVarNames","reLeadingHyphens","reduce","__recursiveFallback","valueData","fallback","hasOwnProperty","replacement","unresolvedFallback","resolveFunc","isBrowser","isNativeSupport","CSS","defaults","shadowDOM","incremental","onlyLegacy","silent","updateDOM","updateURLs","watch","cssKeyframes","cssRootRules","cssUrls","cssVarDecls","cssVars","cssVarsCounter","cssVarsObserver","debounceTimer","isShadowDOMReady","msgPrefix","handleError","message","sourceNode","handleWarning","__benchmark","getTimeStamp","prevNodes","removeAttribute","disconnect","isStylesheet","tagName","disabled","MutationObserver","mutations","hasValidMutation","mutation","mutationNodes","isValid","target","addedNodes","isElm","nodeType","hasAttr","hasAttribute","isStyleWithVars","isRemove","isSkip","dataInOut","dataJob","jobNodes","inNodes","outNode","parentNode","removeChild","isValidRemoveMutation","removedNodes","cssVarsDebounced","observe","documentElement","attributes","attributeFilter","childList","subtree","addMutationObserver","isShadowElm","shadowRoot","targetElm","style","setProperty","nodeArray","cssUrl","responseUrl","responseURL","statusText","doUpdate","isNewVarVal","oldVarsObj","newVarsObj","cssVarDeclsMatch","lastIndex","isNewValue","hasNewVarVal","isNewDecl","hasNewVarDecl","len","prevOutNodes","hasKeyframesWithVars","group1","errorThrown","errorNode","elms","querySelector","styleNode","cssNodes","lastNode","insertBefore","nextSibling","removeNodes","animationNameProp","getComputedStyle","allNodes","getElementsByTagName","keyframeNodes","animationName","offsetHeight","nodeStyle","fixKeyframes","addEventListener","init","evt","removeEventListener","clearTimeout","performance","now","Date","getTime"],"mappings":"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"}